<Application x:Class="PokemonBattleOnline.PBO.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:PokemonBattleOnline.PBO.Converters"
             xmlns:ui="clr-namespace:PokemonBattleOnline.PBO.Elements">
    <Application.Resources>
        <ItemsPanelTemplate x:Key="WrapPanel">
            <WrapPanel Background="{x:Null}" Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="VerticalWrapPanel">
            <WrapPanel Background="{x:Null}" Orientation="Vertical" Height="{Binding (FrameworkElement.ActualHeight), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
        </ItemsPanelTemplate>
        <Style x:Key="XButton" TargetType="Button">
            <Setter Property="Content" Value="×"/>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="BorderBrush" Value="DarkRed"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock Name="x" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="x" Property="Foreground" Value="{Binding Background,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="x" Property="Foreground" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="x" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="STextBlock" TargetType="Label">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Grid DataContext="{TemplateBinding Content,Converter={x:Static c:AllString.C}}" ClipToBounds="False" IsHitTestVisible="False" SnapsToDevicePixels="True">
                            <TextBlock Margin="-1,0,0,0" Foreground="{TemplateBinding Background}"  Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Margin="-1,-1,0,0" Foreground="{TemplateBinding Background}" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Margin="0,-1,0,0" Foreground="{TemplateBinding Background}" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Margin="1,-1,0,0" Foreground="{TemplateBinding Background}" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Margin="1,0,0,0" Foreground="{TemplateBinding Background}" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Margin="1,1,0,0" Foreground="{TemplateBinding Background}" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Margin="0,1,0,0" Foreground="{TemplateBinding Background}" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Margin="-1,1,0,0" Foreground="{TemplateBinding Background}" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                            <TextBlock Foreground="White" Text="{Binding}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        </Style>
        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="#f0ffffff"/>
            <Setter Property="HasDropShadow" Value="False"/>
            <Style.Triggers>
                <Trigger Property="Content" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="BattleType">
            <Border Background="{Binding Converter={x:Static c:BattleTypeBg.C}}" BorderBrush="{Binding Converter={x:Static c:BattleTypeBorder.C},ConverterParameter=ff}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="9" Height="18" Width="48">
                <Label Content="{Binding Converter={x:Static c:BattleTypeString.C}}" Background="{Binding Converter={x:Static c:BattleTypeBorder.C}}" Style="{StaticResource STextBlock}" FontSize="11" FontWeight="Normal" FontStyle="Normal" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1.5,0,0"/>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Invalid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="MoveCategory">
            <Border x:Name="bg" BorderThickness="1" Width="41" SnapsToDevicePixels="True">
                <TextBlock x:Name="t" Text="{Binding Converter={x:Static c:MoveCategoryText.C}}" HorizontalAlignment="Center" FontWeight="Normal"/>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Status">
                    <Setter TargetName="bg" Property="Background" Value="#BEBEBE"/>
                    <Setter TargetName="bg" Property="BorderBrush" Value="#2C2C2A"/>
                    <Setter TargetName="t" Property="Foreground" Value="#FBFBFD"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Physical">
                    <Setter TargetName="bg" Property="Background" Value="#FE5900"/>
                    <Setter TargetName="bg" Property="BorderBrush" Value="#850000"/>
                    <Setter TargetName="t" Property="Foreground" Value="#FFEB0D"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Special">
                    <Setter TargetName="bg" Property="Background" Value="#2B84E8"/>
                    <Setter TargetName="bg" Property="BorderBrush" Value="#000765"/>
                    <Setter TargetName="t" Property="Foreground" Value="#D9F8FF"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="GenderLabel">
            <TextBlock Name="gender" FontSize="14"/>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Male">
                    <Setter TargetName="gender" Property="Text" Value="♂"/>
                    <Setter TargetName="gender" Property="Foreground" Value="#00adff"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Female">
                    <Setter TargetName="gender" Property="Text" Value="♀"/>
                    <Setter TargetName="gender" Property="Foreground" Value="#ff0000"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="AbilityLabel">
            <TextBlock Text="{Binding Converter={x:Static c:AbilityString.C}}">
                <TextBlock.ToolTip>
                    <ToolTip Content="{Binding Converter={x:Static c:AbilityDString.C}}"/>
                </TextBlock.ToolTip>
            </TextBlock>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="ItemLabel">
            <TextBlock Text="{Binding Converter={x:Static c:ItemString.C}}" ToolTip="{Binding Converter={x:Static c:ItemDString.C}}"/>
        </DataTemplate>
        <DataTemplate x:Key="PokemonStateLabel">
            <Image Name="img" Height="10" Width="40" SnapsToDevicePixels="True" Stretch="Uniform" ToolTip="{Binding}"/>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="BRN">
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="FRZ">
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="PAR">
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="PSN">
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="BadlyPSN">
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="SLP">
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Faint">
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="User">
            <TextBlock Text="{Binding Name}" Width="128" Background="Transparent" Foreground="{Binding Name,Converter={x:Static c:UserColor.C}}"/>
        </DataTemplate>
    </Application.Resources>
</Application>
